{"version":3,"file":"main.a4ceb9567a642a88de83.js","mappings":"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","sources":["webpack:///./ts/drawField/drawField.ts","webpack:///./ts/getNumberOfLiveAround/getNumberOfLiveAround.ts","webpack:///./ts/getNextCellState/getNextCellState.ts","webpack:///./ts/createGameOfLive/createGameOfLive.ts","webpack:///./ts/getNextGeneration/getNextGeneration.ts","webpack:///./ts/app.ts"],"sourcesContent":["const drawField = (\n  el: HTMLElement,\n  field: Array<Array<number>>,\n  onCellClick: (x: number, y: number, isAlive: boolean) => void\n) => {\n  el.innerHTML = \"\";\n  const table = document.createElement(\"table\");\n  table.className = \"field\";\n  field.forEach((array, y) => {\n    const tr = document.createElement(\"tr\");\n    table.insertAdjacentElement(\"afterbegin\", tr);\n    array.forEach((item, x) => {\n      const td = document.createElement(\"td\");\n      td.className = \"cell\";\n      td.classList.add(`${item ? \"cell__alive\" : \"cell__death\"}`);\n      td.dataset.y = `${y}`;\n      td.dataset.x = `${x}`;\n      td.addEventListener(\"click\", () => {\n        onCellClick(x, y, Boolean(item));\n      });\n      tr.insertAdjacentElement(\"afterbegin\", td);\n    });\n  });\n  el.insertAdjacentElement(\"afterbegin\", table);\n};\n\nexport default drawField;\n","export const getNumberOfLiveAround = (\n  field: number[][],\n  x: number,\n  y: number\n) => {\n  let result = 0;\n  if (y - 1 >= 0 && y - 1 < field.length) {\n    result += field[y - 1][x - 1] ?? 0;\n    result += field[y - 1][x] ?? 0;\n    result += field[y - 1][x + 1] ?? 0;\n  }\n  if (y >= 0 && y < field.length) {\n    result += field[y][x - 1] ?? 0;\n    result += field[y][x + 1] ?? 0;\n  }\n  if (y + 1 >= 0 && y + 1 < field.length) {\n    result += field[y + 1][x - 1] ?? 0;\n    result += field[y + 1][x] ?? 0;\n    result += field[y + 1][x + 1] ?? 0;\n  }\n\n  return result;\n};\n","export default function getNextCellState(state: boolean, neighbors: number) {\n  if (state === false && neighbors === 3) {\n    return true;\n  }\n  return state === true && (neighbors === 2 || neighbors === 3);\n}\n","import drawField from \"../drawField/drawField\";\nimport { getNextGeneration } from \"../getNextGeneration/getNextGeneration\";\n\nexport const createGameOfLive = (\n  el: HTMLElement,\n  height = 20,\n  width = 20,\n  step = 1000\n) => {\n  let field: any = Array.from({ length: height }).map(() =>\n    Array.from({ length: width }).fill(0)\n  );\n  const app = document.createElement(\"div\") as HTMLDivElement;\n\n  const onCellClick = (x: number, y: number, isAlive: boolean): void => {\n    field[y][x] = !isAlive;\n    drawField(app, field, onCellClick);\n  };\n\n  const startGame = (): void => {\n    field = Array.from({ length: height }).map(() =>\n      Array.from({ length: width }).fill(0)\n    );\n    drawField(app, field, onCellClick);\n  };\n\n  app.setAttribute(\"id\", \"app\");\n  el.insertAdjacentElement(\"afterbegin\", app);\n\n  const button = document.createElement(\"button\");\n  button.textContent = \"start\";\n  button.classList.add(\"btn__switch\");\n\n  let timerId: any;\n\n  const handlerButton = (speed: number): void => {\n    const makeGameStep = () => {\n      field = getNextGeneration(field);\n      drawField(app, field, onCellClick);\n    };\n    if (button.textContent === \"start\") {\n      button.textContent = \"stop\";\n      timerId = setInterval(makeGameStep, speed);\n    } else {\n      button.textContent = \"start\";\n      clearInterval(timerId);\n      field = Array.from({ length: height }).map(() =>\n        Array.from({ length: width }).fill(0)\n      );\n      drawField(app, field, onCellClick);\n    }\n  };\n  button.addEventListener(\"click\", () => {\n    handlerButton(step);\n  });\n\n  const firstInputNum: HTMLInputElement = document.createElement(\"input\");\n  const secondInputNum: HTMLInputElement = document.createElement(\"input\");\n  const thirdInputRange: HTMLInputElement = document.createElement(\"input\");\n\n  firstInputNum.className = \"input__width\";\n  firstInputNum.setAttribute(\"type\", \"number\");\n  firstInputNum.setAttribute(\"min\", \"10\");\n  firstInputNum.setAttribute(\"max\", \"50\");\n  firstInputNum.setAttribute(\"step\", \"1\");\n\n  firstInputNum.addEventListener(\"input\", () => {\n    width = Number(firstInputNum.value);\n    if (width >= 10 && width <= 50) startGame();\n  });\n\n  secondInputNum.className = \"input__height\";\n  secondInputNum.setAttribute(\"type\", \"number\");\n  secondInputNum.setAttribute(\"min\", \"10\");\n  secondInputNum.setAttribute(\"max\", \"50\");\n  secondInputNum.setAttribute(\"step\", \"1\");\n\n  secondInputNum.addEventListener(\"input\", () => {\n    height = Number(secondInputNum.value);\n    if (height >= 10 && height <= 50) startGame();\n  });\n\n  thirdInputRange.className = \"input__range\";\n  thirdInputRange.setAttribute(\"type\", \"range\");\n  thirdInputRange.setAttribute(\"min\", \"1\");\n  thirdInputRange.setAttribute(\"max\", \"5\");\n  thirdInputRange.setAttribute(\"step\", \"1\");\n  thirdInputRange.value = \"1\";\n\n  thirdInputRange.addEventListener(\"change\", () => {\n    step = Number(thirdInputRange.value) * 1000;\n  });\n\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"wrapper\";\n  wrapper.insertAdjacentElement(\"beforeend\", firstInputNum);\n  wrapper.insertAdjacentElement(\"beforeend\", secondInputNum);\n  el.insertAdjacentElement(\"beforeend\", wrapper);\n  el.insertAdjacentElement(\"beforeend\", thirdInputRange);\n  el.insertAdjacentElement(\"beforeend\", button);\n  drawField(app, field, onCellClick);\n};\n","import { getNumberOfLiveAround } from \"../getNumberOfLiveAround/getNumberOfLiveAround\";\nimport getNextCellState from \"../getNextCellState/getNextCellState\";\n\nexport const getNextGeneration = (field: Array<Array<number>>) => {\n  const result = JSON.parse(JSON.stringify(field));\n  for (let y = 0; y < field.length; y++) {\n    for (let x = 0; x < field[y].length; x++) {\n      const neighbors = getNumberOfLiveAround(field, x, y);\n      const state = field[y][x] !== 0;\n      const nextState = getNextCellState(state, neighbors);\n      result[y][x] = nextState ? 1 : 0;\n    }\n  }\n  return result;\n};\n","import { createGameOfLive } from \"./createGameOfLive/createGameOfLive\";\n\ncreateGameOfLive(document.body);\n"],"names":["el","field","onCellClick","innerHTML","table","document","createElement","className","forEach","array","y","tr","insertAdjacentElement","item","x","td","classList","add","dataset","addEventListener","Boolean","getNumberOfLiveAround","result","length","getNextCellState","state","neighbors","height","width","step","Array","from","map","fill","app","isAlive","drawField","startGame","setAttribute","button","timerId","textContent","speed","setInterval","JSON","parse","stringify","nextState","getNextGeneration","clearInterval","firstInputNum","secondInputNum","thirdInputRange","Number","value","wrapper","createGameOfLive","body"],"sourceRoot":""}